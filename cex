#!/usr/bin/env bash

help_msg() {
    >&$1 echo "Usage: $0 <file.c ... | compiler_options ...> [program_arguments]"
    >&$1 echo 'compile and execute programs from the command line.'
    >&$1 echo
    >&$1 echo 'example usage:'
    >&$1 echo "$0  main.c"
    >&$1 echo "$0  main.c arg1 arg2"
    >&$1 echo "$0  main.c -lncurses arg1 arg2"
    >&$1 echo "$0  main.c < <input file>"
    >&$1 echo
}

# --help -h, print help message exit(0)
if [[ "$1" == "--help" || "$1" == "-h" ]]
then
    help_msg 1;
    exit 0;
fi

# empty arguments, print help message exit(1)
if [[ "$#" -lt 1 ]]
then
    help_msg 2;
    exit 1;
fi

# find filename and extension name
filename=$(basename -- "$1")
extension="${1##*.}"
filename="$@"
bin_name="${1%.*}"

# check for environment variables
[[ -z "$CC" ]]  && CC=cc
[[ -z "$CXX" ]] && CXX=c++

# check for compilers 
if command -v $CC >/dev/null; then
    echo
else
    >&2 echo "error: \$CC ($CC) not found"
fi

if command -v $CXX >/dev/null; then
    echo
else
    >&2 echo -e "error: \$CXX ($CXX) not found \nSetting compiler to cc"
    CXX="cc -lstdc++"
fi

# check file extension
if [ "$extension" == "c" ]; then  
    compiler=$CC
    elif [[ "$extension" =~ (cc|c\+\+|cpp|cxx) ]]; then
    compiler=$CXX
else
    >&2 echo -e "\e[1;31mUnsupported file format. Only .c and .cpp files are supported.\e[0m\n"
    exit 1
fi


# compile and execute program
echo -e "\e[1;34m$compiler -o $bin_name.bin $filename\n"
$compiler -o $bin_name.bin $filename
if [ $? -eq 0 ]; then
    echo -e "\e[1;32m\nCompilation successful. Executing the program...\e[0m\n"
    
    start_time=$(date +%s%3N)
    ./$bin_name.bin
    end_time=$(date +%s%3N)
    execution_time=$((end_time - start_time))
    
    echo -e "\n\nExecution time: $execution_time ms"
else
    echo -e "\e[1;31m[error] Compilation failed.\e[0m\n"
fi

