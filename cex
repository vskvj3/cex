#!/usr/bin/env bash

help_msg() {
    >&$1 echo "Usage: $0 <file.c ... | compiler_options ...> [program_arguments]"
    >&$1 echo 'compile and execute programs from the command line.'
    >&$1 echo
    >&$1 echo 'example usage:'
    >&$1 echo "$0  main.c"
    >&$1 echo "$0  main.c arg1 arg2"
    >&$1 echo "$0  main.c -lncurses arg1 arg2"
    >&$1 echo
}

# --help -h, print help message exit(0)
if [[ "$1" == "--help" || "$1" == "-h" ]]
then
    help_msg 1; 
    exit 0;
fi

# empty arguments, print help message exit(1)
if [[ "$#" -lt 1 ]] 
then 
    help_msg 2; 
    exit 1; 
fi

# find filename and extension name
filename=$(basename -- "$1")

extension="${1##*.}"
filename="$@"
bin_name="${1%.*}"


# Compile and execute the program based on the file extension
if [ "$extension" == "c" ]; then
    echo -e "\e[1;34mgcc -o $bin_name.bin $filename\n"
    gcc -o $bin_name.bin $filename
    if [ $? -eq 0 ]; then
        echo -e "\e[1;32m\nCompilation successful. Executing the program...\e[0m\n" 
        ./$bin_name.bin
    else
        echo -e "\e[1;31m[error] Compilation failed.\e[0m\n" 
    fi
elif [ "$extension" == "cpp" ]; then
    echo "g++ -o $bin_name.bin $filename"
    g++ -o $bin_name.bin $filename
    if [ $? -eq 0 ]; then
        echo -e "\e[1;32m\nCompilation successful. Executing the program...\e[0m\n" 
        ./$bin_name.bin
    else
        echo -e "\e[1;31m[error] Compilation failed.\e[0m\n"
    fi
else
    echo -e "\e[1;31mUnsupported file format. Only .c and .cpp files are supported.\e[0m\n" 
    exit 1
fi
